//----- Variables -----------------------------------------------------------------------------------------------------

bg_mode = 0
calc.char = 0
calc.return = 0
calc.temp = 0
calc.temp2 = 0
chip8.delay_timer = 0
chip8.dummy = 0
chip8.dummy2 = 0
chip8.I = 0
chip8.pc = 0
chip8.rand = 0
chip8.return = 0
chip8.sound_timer = 0
flags.met = 0
op.opcode = 0
op.pos = 0
op.temp = 0
program.done = 0
read.return = 0
read.single.return = 0
rom.name = 0
scanX = 0
scanY = 0
storage.byte = 0
tile_mode = 0


//----- Lists ---------------------------------------------------------------------------------------------------------

chip8.keyboard = { }
chip8.memory = { }
chip8.registers = { }
chip8.screen = { }
chip8.stack = { }


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(exit emulator)
{
    Call get stage size;
    Looks.Hide();
    Sensing.ResetTimer();
    Forever
    {
        Call render(Sensing.Timer())(GUItemp);
    }
}

WhenBroadcastReceived(fade_out)
{
    Pen.Clear();
    Stop(other scripts in sprite);
    Motion.GoTo(Blank);
    Looks.Show();
    Looks.SetEffectTo(GHOST, 100);
    Costume.GoToFrontBack(front);
    Repeat (10)
    {
        Looks.ChangeEffectBy(GHOST, -10);
    }
    Looks.SwitchBackdropTo(Black);
}

WhenBroadcastReceived(Launch EmulatorWaitd)
{
    Pen.Clear();
    Looks.Hide();
    Stop(other scripts in sprite);
}

WhenBroadcastReceived(stop_scripts)
{
    Looks.Hide();
    Stop(other scripts in sprite);
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define get stage size (warp=true)
{
    Looks.Show();
    Looks.SwitchCostumeTo(2x2 svg);
    Motion.GoToXY(-1, 0);
    Repeat Until Sensing.TouchingObject(_edge_)
    {
        Motion.ChangeXBy(2);
    }
    stage width = ((Motion.XPosition() * 2) - 2);
    Looks.SwitchCostumeTo(costume1);
}

Define render(string timer)(string height) (warp=true)
{
    Pen.Clear();
    Pen.SetPenColorToColor(#6cb7ff);
    Pen.SetPenTo(transparency, 30);
    Pen.ChangePenBy(color, (Operator.Round(Operator.Join("0x", Operator.Join(Menu Theme[5], Menu Theme[6]))) / 2));
    Motion.SetX((stage width / -2));
    Repeat (stage width)
    {
        Pen.Down();
        Motion.SetY((((10 * sin((Motion.XPosition() + (50 * timer)))) - (50 * sin((8 * ((Motion.XPosition() / 100) + timer))))) - height));
        Motion.SetY(-180);
        Pen.Clear();
        Motion.SetY((((10 * sin((Motion.XPosition() + (50 * timer)))) - (50 * sin((8 * ((Motion.XPosition() / 100) + timer))))) - height));
        Motion.ChangeXBy(1);
    }
}


//----- Costumes ------------------------------------------------------------------------------------------------------

2x2 svg.svg
costume1.svg
