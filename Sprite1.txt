//----- Variables -----------------------------------------------------------------------------------------------------

Ahello = 0
arm7.pc = 0
arm7.read_return = 0
arm9.pc = 0
arm9.read_return = 0
bg_mode = 0
c8.Load/Save_Quirk = 0
c8.Shift_quirk = 0
c8scrnsize = 0
calc.char = 0
calc.return = 0
calc.temp = 0
calc.temp2 = 0
chip8.audio toggle = 0
chip8.audio_buffer = 0
chip8.delay_timer = 0
chip8.drawflag = 0
chip8.drawmode = 0
chip8.drawplane = 0
chip8.drawtoggle = 0
chip8.drawvariety = 0
chip8.dummy = 0
chip8.dummy2 = 0
chip8.dummy3 = 0
chip8.dummy4 = 0
chip8.dummy5 = 0
chip8.HPSFlag = 0
chip8.I = 0
chip8.pc = 0
chip8.pitch = 0
chip8.rand = 0
chip8.return = 0
chip8.screenheight = 0
chip8.screenwidth = 0
chip8.sound_timer = 0
chip8.spritewidth = 0
core.byte_return = 0
core.condition_test = 0
core.dummy = 0
core.dummy2 = 0
core.dummy_op = 0
core.instruction_format = 0
core.little_endian = 0
core.op.dummy = 0
core.op.dummy2 = 0
core.read_return = 0
core.rotate_return = 0
core.shift_return = 0
CPF = 0
flags.met = 0
Input = 0
op.opcode = 0
op.pos = 0
op.temp = 0
program.done = 0
read.return = 0
read.single.return = 0
S = 0
scanX = 0
scanY = 0
SF2091! fix = 0
storage.byte = 0
tile_mode = 0
Velocity = 0
VIP jumps = 0
_id = 0
_pitch = 0


//----- Lists ---------------------------------------------------------------------------------------------------------

arm7.registers = { }
arm9.flags = { }
arm9.registers = { }
Boot-128 = { }
chip8.keyboard = { }
chip8.memory = { }
chip8.registers = { }
chip8.screen = { }
chip8.screen2 = { }
chip8.stack = { }
schip8.font = { }
schip8.RPL = { }


//----- Green flag events ---------------------------------------------------------------------------------------------

WhenGreenFlagClicked()
{
    Looks.Hide();
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(exit emulator)
{
    Looks.ClearGraphicEffects();
    Looks.SetEffectTo(GHOST, 100);
    Motion.GoToXY(0, 30);
    Looks.SwitchCostumeTo((2 - is compiled?));
    Looks.SetSizeTo(100);
    Motion.PointInDirection(90);
    Looks.Show();
    Repeat (10)
    {
        Motion.ChangeYBy(-3);
        Looks.ChangeEffectBy(GHOST, -10);
    }
    Variable.Hide(GUItemp);
    GUItemp = (130 + (is compiled? * 10));
    Control.Wait(0.9);
    Event.Broadcast("logomove");
    Looks.SetEffectTo(COLOR, Operator.Join("0x", Operator.Join(Menu Theme[5], Menu Theme[6])));
    Repeat ((8 + is compiled?))
    {
        Looks.NextCostume();
        Control.Wait(((1 + is compiled?) / 100));
        GUItemp += -10;
    }
}

WhenBroadcastReceived(exit emulator)
{
    Event.Broadcast("pause");
    If (Menu Theme[4] == 0)
    {
        Looks.Hide();
    }
    Else
    {
        Looks.Show();
    }
    my variable = 0;
    Control.Wait(1.5);
    If (Menu Theme[7] == 0)
    {
        Forever
        {
            my variable = ((my variable + 5) % 725);
            Motion.ChangeYBy(sin(my variable));
        }
    }
}

WhenBroadcastReceived(GUI_Emulator_Select)
{
    If ((Romimportflag == 1) Or (Romimportflag == 2))
    {
        Romimportflag = MenuScroll;
        Sound.Play((1 + (2 * Menu Theme[7])));
    }
    Else
    {
        Inemu? = 2;
        If (MenuScroll == 200)
        {
            Sound.Play((1 + (2 * Menu Theme[7])));
            Event.Broadcast("get_theme");
        }
        If (MenuScroll == 0)
        {
            Sound.Play((1 + (2 * Menu Theme[7])));
            Event.Broadcast("get_controls");
        }
        If (MenuScroll == -200)
        {
            Sound.Play((1 + (2 * Menu Theme[7])));
            Event.Broadcast("get_rom");
        }
        If (MenuScroll == -400)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(Chip-8);
            Event.Broadcast("Chip-8");
        }
        If (MenuScroll == -600)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(Game Boy);
            Event.Broadcast("emulate!!");
        }
        If (MenuScroll == -800)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(Black);
            Event.Broadcast("Game Boy Advance");
        }
        If (MenuScroll == -1000)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(screen);
            Event.Broadcast("start game");
        }
        If (MenuScroll == -1200)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(NES);
            coolnes_convert = 1;
            Event.BroadcastAndWait("init");
            Event.Broadcast("unpause");
        }
        If (MenuScroll == -1400)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(BytePusher);
            Event.Broadcast("BytePusher");
        }
        If (MenuScroll == -1600)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(HelloWorld);
            Event.Broadcast("HelloInter");
        }
        If (MenuScroll == -1800)
        {
            Event.Broadcast("Launch Emulator");
            Sound.Play((2 + (2 * Menu Theme[7])));
            Event.BroadcastAndWait("Launch EmulatorWaitd");
            Looks.SwitchBackdropTo(SI8080);
            Event.Broadcast("8080");
        }
    }
}

WhenBroadcastReceived(Launch EmulatorWaitd)
{
    If (Not ((Inemu? == 2)))
    {
        Stop(other scripts in sprite);
    }
    Looks.Hide();
}

WhenBroadcastReceived(Launch EmulatorWaitd)
{
    If (Not ((Inemu? == 2)))
    {
        Stop(other scripts in sprite);
    }
    Looks.Hide();
}

WhenBroadcastReceived(logomove)
{
    Repeat (15)
    {
        Looks.ChengeSizeBy(-1);
    }
    Motion.GlideTo(0, (50 + (Menu Theme[7] * 10)), 0.5);
}

WhenBroadcastReceived(un-needed broadcast)
{
    Looks.Hide();
}


//----- Costumes ------------------------------------------------------------------------------------------------------

costume2.svg
costume3.svg
costume4.svg
costume5.svg
costume6.svg
costume7.svg
costume8.svg
costume9.svg
costume10.svg
costume11.svg


//----- Sounds --------------------------------------------------------------------------------------------------------

423930__mudkip2016__correct.wav
select.wav
Select WDS.wav
Theme WDS.wav
